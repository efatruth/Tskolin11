1. Hvað er ECMAScript:
  - ECMAScript er staðall og þekktustu útfærslur staðalsins eru Javascript, JScript og ActionScript

2.  Hvað þýðir að JavasScript sé loosly typed tungumál?
  - Breytur eru búnir til án þess að það sé sagt hvernig tegund/"týpa" breytan er.

3. Er einhver munur á einföldum og tvöföldum gæsalöppum í JavaScript?
  - Enginn munur

4.  Hvað er null og undefined?
  - "Undefined" þýðir að það er búið að búa til breytu en ekki búið að gefa það gildi en "null" er bara 0.

5. Hver er munurinn á == og === í JavaScript?
  - "===" athugar tegund breytuna first, en "==" berir saman gildinn.

6.  Hver er munurinn á let og var? komdu með kóðadæmi sem sýnir muninn.
  - VAR hostar allar breyturnar í JavaScript skjalinu en LET gerir breytuna á staðnum þar sem hún er búinn til.
    var x = 50;
    var y = 100;

    if (x === 50) {
      var x = 500; 
      let y = 1000;

      console.log(x);  // 50
      console.log(y);  // 100
    } 

    console.log(x); // 50
    console.log(y); // 100


7. Skilgreindu fall á þrjá mismunandi vegu með kóðadæmi; function declarations, function
expressions og arrow functions.

  - FUNCTION DECLARATIONS:
      function myFunction(a, b) {
        return a * b;
      }
     
     FUNCTION EXPRESSION:
      var add = function (x,y) {
        return x + y;
      }
    
     ARROW FUNTION:
      var add = (x,y) => {
        return x + y;
      }

8. Hvað gerir 'use strict'; í EcmaScript?
  - Það hjápar þér að sjá stafsetningvillur í kóðnum og auðveldar fyrir þig að leiðrétta villuna.

9. Hér er dæmi um “function declaration” og kall á fallið. Afhverju virkar eftirfarandi kóði í JavaScript, útskýrðu? 
  - Af því að JavaScript leitar af öllum "function declartion" áður en hún keyrir línu á eftir línu.

10.Í hvaða röð er kóðinn keyrður í raun eftir að þýðandinn (e. interpreter) er búinn að fá hann til sín? Hvað birtir alert(), afhverju?   - Alert birtir 8 vegna þess að function-ið sem skilar frá sér 8 er á eftir funtion-ið sem skilar 3. 

11. Hvað gerist þegar ég gleymi að skilgreina breytu með var eða let? Útskýrðu hvað gerist 
  - Það kemur villa því ef við sleppum var eða let þá erum við ekki búnir að segja forritinu að við erum að búa til breytu.

12. Útskýrðu hvað eftirfarandi kóði gerir, hvað gera svigarnir? 
  - Function-ið keyrist strax.

13. Útskýrðu variable scope.
  - Scope getur verið local og global. 
  
    Local scope þýðir að ef þú býrð til breytu locally er breytan til bara inn í þeirri 'blocki' t.d function-i. Ef þú býrð til breytu       inn í function er hún bara til í þeirri function-i.
    
    Global scope er þegar breyta er búinn til fyrir utan function/blocki eða efst í skjalinu geta er breytan til hjá öllum                   blockum/function-um
    
14. Hvað er call stack?
  - Það sem call stack gerir er að tákna hvaða röð function-inn okkar eru kallað og hvernig breytu er verið að kalla með.
